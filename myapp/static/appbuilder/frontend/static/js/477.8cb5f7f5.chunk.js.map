{"version":3,"file":"static/js/477.8cb5f7f5.chunk.js","mappings":"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","sources":["components/TitleHeader/TitleHeader.tsx","components/TableBox/TableBox.tsx","components/ModalForm/ModalForm.tsx","components/MixSearch/MixSearch.tsx","components/InputSearch/InputSearch.tsx","components/DynamicForm/DynamicForm.tsx","pages/ADUGTemplate.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport { Row, Typography, Col, Space } from 'antd';\nimport './TitleHeader.less';\n\nconst { Title } = Typography;\n\ninterface IProps {\n    title: ReactNode | string;\n    children?: ReactNode;\n    noBorderBottom?: boolean;\n    breadcrumbs?: ReactNode | string;\n}\n\nconst TitleHeader = (props: IProps) => {\n    const styles: React.CSSProperties = { position: 'sticky', top: 0 }\n    return (\n        <Row\n            className=\"title-header\"\n            justify=\"space-between\"\n            align=\"middle\"\n            style={props.noBorderBottom ? { borderBottom: 'none', ...styles } : styles}>\n            <div>\n                <Title className=\"d-il mr12\" level={5} style={{ marginBottom: 10 }}>\n                    {props.title}\n                </Title>\n                <div className=\"d-il\">\n                    {props.breadcrumbs}\n                </div>\n            </div>\n\n            <Col>\n                <Space>{props.children ? props.children : null}</Space>\n            </Col>\n        </Row>\n    );\n};\n\nexport default TitleHeader;\n","import React, { ReactNode, useEffect, useState } from 'react';\nimport { Row, Col, Space, Table, ConfigProvider, Button, Modal, Tabs, message, Checkbox } from 'antd';\nimport './TableBox.less';\nimport { TablePaginationConfig } from 'antd/lib/table/Table';\nimport emptyImg from '../../images/emptyBg.png';\nimport { GetRowKey, SorterResult, TableRowSelection } from 'antd/lib/table/interface';\nimport ExportJsonExcel from 'js-export-excel';\nimport { Resizable } from 'react-resizable';\n\nconst CopyToClipboard = require('react-copy-to-clipboard');\n\ninterface IProps {\n\tsize?: 'large' | 'middle' | 'small'\n\ttableKey?: string\n\trowKey?: string | GetRowKey<any>;\n\ttitleNode?: string | ReactNode;\n\tbuttonNode?: ReactNode;\n\tdataSource: any;\n\tcolumns: any;\n\tpagination?: false | TablePaginationConfig;\n\tscroll?:\n\t| ({\n\t\tx?: string | number | true | undefined;\n\t\ty?: string | number | undefined;\n\t} & {\n\t\tscrollToFirstRowOnChange?: boolean | undefined;\n\t})\n\t| undefined;\n\tloading?: boolean;\n\trowSelection?: TableRowSelection<any>;\n\tcancelExportData?: boolean;\n\tonChange?: (\n\t\tpagination: TablePaginationConfig,\n\t\tfilters: Record<string, (string | number | boolean)[] | null>,\n\t\tsorter: SorterResult<any> | SorterResult<any>[],\n\t) => void;\n}\n\nconst customizeRenderEmpty = () => (\n\t<Row justify=\"center\" align=\"middle\" style={{ height: 360, flexDirection: 'column' }}>\n\t\t<img src={emptyImg} style={{ width: 266 }} alt=\"\" />\n\t\t<div>暂无数据</div>\n\t</Row>\n);\n\nconst ResizableTitle = ({ onResize, width, ...restProps }: any) => {\n\tif (!width) {\n\t\treturn <th {...restProps} />;\n\t}\n\n\treturn (\n\t\t<Resizable\n\t\t\twidth={width}\n\t\t\theight={0}\n\t\t\thandle={\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"react-resizable-handle\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonResize={onResize}\n\t\t\tdraggableOpts={{ enableUserSelectHack: false }}\n\t\t>\n\t\t\t<th {...restProps} style={{ ...restProps?.style, userSelect: 'none' }} />\n\t\t</Resizable>\n\t);\n};\n\nconst TableBox = (props: IProps) => {\n\tconst [exportDataVisible, setExportDataVisible] = useState(false);\n\tconst [dataFormat, setDataFormat] = useState<{ header: any[]; data: any[] }>({\n\t\theader: [],\n\t\tdata: [],\n\t});\n\tconst [filterValue, setFilterValue] = useState<any[]>([]);\n\n\t// 可伸缩列设置\n\tconst [cols, setCols] = useState(props.columns);\n\tconst handleResize = (index: any) => {\n\t\treturn (_: any, { size }: any) => {\n\t\t\tif (size.width < 100) return\n\t\t\tconst temp = [...cols];\n\t\t\ttemp[index] = { ...temp[index], width: size.width };\n\t\t\tconst tableWidth = temp.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 200\n\t\t\tlocalStorage.setItem(props.tableKey || '', JSON.stringify(temp))\n\t\t\t// console.log(currentTableScroll, temp);\n\t\t\tsetCurrentTableScroll({ ...currentTableScroll, x: tableWidth })\n\t\t\tsetCols(temp);\n\t\t};\n\t};\n\tconst customColumns = cols.map((col: any, index: any) => {\n\t\treturn {\n\t\t\t...col,\n\t\t\twidth: col.width || 200,\n\t\t\tonHeaderCell: (column: any) => {\n\t\t\t\treturn {\n\t\t\t\t\twidth: column.width,\n\t\t\t\t\tonResize: handleResize(index),\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t});\n\tconst [currentTableScroll, setCurrentTableScroll] = useState(props.scroll)\n\n\tuseEffect(() => {\n\t\tsetCols(props.columns);\n\t}, [props.columns]);\n\n\tuseEffect(() => {\n\t\tsetCurrentTableScroll(props.scroll);\n\t}, [props.scroll]);\n\n\tuseEffect(() => {\n\t\tif (props.dataSource) {\n\t\t\tconst columns = props.columns.filter((item: any) => ~filterValue.indexOf(item.dataIndex));\n\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t}\n\t}, [props.dataSource, props.columns]);\n\n\tconst handdleFilterHeader = (dataColumns = [], data: any[]) => {\n\t\tconst columns = dataColumns.map((item: any) => item.dataIndex).filter((item: string) => item !== 'handle');\n\t\tconst sheetHeader = dataColumns.map((item: any) => item.title).filter((item: string) => item !== '操作');\n\t\tconst tarData: any = [];\n\n\t\tdata.forEach((dataRow: any) => {\n\t\t\tconst row: any = {};\n\t\t\tcolumns.map((colName: string) => {\n\t\t\t\tconst res = dataRow[colName];\n\t\t\t\trow[colName] = res || '';\n\t\t\t});\n\t\t\ttarData.push(row);\n\t\t});\n\n\t\tsetDataFormat({\n\t\t\theader: sheetHeader,\n\t\t\tdata: tarData,\n\t\t});\n\t};\n\n\tconst handleClickOutputExcel = () => {\n\t\tconst option: any = {};\n\t\toption.fileName = 'result';\n\t\toption.datas = [\n\t\t\t{\n\t\t\t\tsheetData: dataFormat.data,\n\t\t\t\tsheetName: 'sheet',\n\t\t\t\tsheetHeader: dataFormat.header,\n\t\t\t},\n\t\t];\n\t\tconst toExcel = new ExportJsonExcel(option);\n\t\ttoExcel.saveExcel();\n\t};\n\n\tconst handleExportJira = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\t'|' +\n\t\t\t\theader.join('|') +\n\t\t\t\t'|' +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\t'|' +\n\t\t\t\t\trowKey.join('|') +\n\t\t\t\t\t'|' +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\n\t\treturn str;\n\t};\n\n\tconst handleExportText = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\theader.join('\t') +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\trowKey.join('\t') +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\t\treturn str;\n\t};\n\n\treturn (\n\t\t<Space className=\"tablebox\" direction=\"vertical\" size=\"middle\">\n\t\t\t<Modal\n\t\t\t\twidth={1000}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tcentered={true}\n\t\t\t\tbodyStyle={{ maxHeight: 500, overflow: 'auto' }}\n\t\t\t\tvisible={exportDataVisible}\n\t\t\t\ttitle={'导出数据'}\n\t\t\t\tonCancel={() => {\n\t\t\t\t\tsetExportDataVisible(false);\n\t\t\t\t}}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div style={{ position: 'relative' }}>\n\t\t\t\t\t<div className=\"mb16\"><span className=\"pr8\">选择需要导出的列：</span><Checkbox.Group\n\t\t\t\t\t\toptions={props.columns\n\t\t\t\t\t\t\t.map((item: any) => ({ label: item.title, value: item.dataIndex }))\n\t\t\t\t\t\t\t.filter((item: any) => item.value !== 'handle')}\n\t\t\t\t\t\tdefaultValue={[]}\n\t\t\t\t\t\tvalue={filterValue}\n\t\t\t\t\t\tonChange={(values: any) => {\n\t\t\t\t\t\t\tsetFilterValue(values);\n\t\t\t\t\t\t\tconst columns = props.columns.filter((item: any) => ~values.indexOf(item.dataIndex));\n\t\t\t\t\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/></div>\n\t\t\t\t\t<div style={{ position: 'absolute', right: 0, bottom: 0 }}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue(\n\t\t\t\t\t\t\t\t\tprops.columns\n\t\t\t\t\t\t\t\t\t\t.map((item: any) => item.dataIndex)\n\t\t\t\t\t\t\t\t\t\t.filter((item: any) => item !== 'handle'),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\thanddleFilterHeader(props.columns, props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t全选\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue([]);\n\t\t\t\t\t\t\t\thanddleFilterHeader([], props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t反选\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Tabs>\n\t\t\t\t\t<Tabs.TabPane tab=\"Wiki格式\" key=\"jira\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportJira()} onCopy={() => message.success('已复制到粘贴板')}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportJira()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Text格式\" key=\"test\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportText()} onCopy={() => message.success('已复制到粘贴板')}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportText()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Excel格式\" key=\"excel\">\n\t\t\t\t\t\t<Row justify=\"center\" align=\"middle\" style={{ minHeight: 100 }}>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={handleClickOutputExcel}>\n\t\t\t\t\t\t\t\t\t导出Excel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t</Tabs>\n\t\t\t</Modal>\n\t\t\t{\n\t\t\t\tprops.titleNode || props.buttonNode || !props.cancelExportData ? <Row justify=\"space-between\" align=\"middle\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">{props.titleNode}</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">\n\t\t\t\t\t\t\t{props.buttonNode}\n\t\t\t\t\t\t\t{props.cancelExportData ? null : (\n\t\t\t\t\t\t\t\t<Button style={{ marginLeft: 6 }} onClick={() => setExportDataVisible(true)}>\n\t\t\t\t\t\t\t\t\t导出数据\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> : null\n\t\t\t}\n\t\t\t<ConfigProvider renderEmpty={customizeRenderEmpty}>\n\t\t\t\t<Table\n\t\t\t\t\tsize={props.size || 'middle'}\n\t\t\t\t\trowKey={props.rowKey ? props.rowKey : 'id'}\n\t\t\t\t\tdataSource={props.dataSource}\n\t\t\t\t\t// columns={props.columns}\n\t\t\t\t\tcomponents={{ header: { cell: ResizableTitle } }}\n\t\t\t\t\tcolumns={customColumns}\n\t\t\t\t\tpagination={props.pagination !== false ? { ...props.pagination } : false}\n\t\t\t\t\tscroll={currentTableScroll}\n\t\t\t\t\tloading={props.loading}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t\trowSelection={props.rowSelection}\n\t\t\t\t/>\n\t\t\t</ConfigProvider>\n\t\t</Space>\n\t);\n};\n\nexport default TableBox;\n","import React, { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { Modal, Form, Spin, Input, FormInstance } from 'antd';\n\ninterface ModalFormProps {\n\tvisible: boolean;\n\tonCreate: (values: any, form: FormInstance<any>) => void;\n\tonCancel: () => void;\n\tloading?: boolean;\n\tchildren?: any;\n\ttitle?: string;\n\tformData?: Record<string, any>;\n\twidth?: number;\n\tonValuesChange?: () => {}\n}\n\nconst ModalForm = (props: ModalFormProps): JSX.Element => {\n\tconst [form] = Form.useForm();\n\tconst [, updateState] = useState<any>();\n\tconst forceUpdate = React.useCallback(() => updateState({}), []);\n\n\tuseEffect(() => {\n\t\tif (props.formData) {\n\t\t\tform.setFieldsValue(props.formData);\n\t\t}\n\t}, [props]);\n\n\tconst [formChangeRes, setFormChangeRes] = useState<{\n\t\tcurrentChange: Record<string, any>\n\t\tallValues: Record<string, any>\n\t}>({\n\t\tcurrentChange: {},\n\t\tallValues: {}\n\t})\n\n\t// const propsChildrenMemo = useMemo(() => props.children(form), [])\n\n\treturn (\n\t\t<Modal\n\t\t\t// confirmLoading={props.loading}\n\t\t\tdestroyOnClose={true}\n\t\t\tmaskClosable={false}\n\t\t\twidth={props.width || 680}\n\t\t\tvisible={props.visible}\n\t\t\ttitle={props.title}\n\t\t\tokText=\"确定\"\n\t\t\tcancelText=\"取消\"\n\t\t\tonCancel={() => {\n\t\t\t\tform.resetFields();\n\t\t\t\tprops.onCancel();\n\t\t\t}}\n\t\t\tonOk={() => {\n\t\t\t\tconsole.log(form.getFieldsValue())\n\t\t\t\tform.validateFields()\n\t\t\t\t\t.then((values) => {\n\t\t\t\t\t\tprops.onCreate(values, form);\n\t\t\t\t\t\t// form.resetFields();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((info) => {\n\t\t\t\t\t\t// console.log('Validate Failed:', info);\n\t\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t<Spin spinning={props.loading}>\n\t\t\t\t<Form onValuesChange={(value, allValues) => {\n\t\t\t\t\tsetFormChangeRes({\n\t\t\t\t\t\tcurrentChange: value,\n\t\t\t\t\t\tallValues\n\t\t\t\t\t})\n\t\t\t\t}} labelCol={{ span: 5 }} wrapperCol={{ span: 19 }} form={form} layout=\"horizontal\" name=\"form_in_modal\">\n\t\t\t\t\t{props.children && Object.prototype.toString.call(props.children) === '[object Function]'\n\t\t\t\t\t\t? props.children(form, formChangeRes)\n\t\t\t\t\t\t: props.children}\n\t\t\t\t</Form>\n\t\t\t</Spin>\n\t\t</Modal>\n\t);\n};\n\nexport default ModalForm;\n","import React, { ReactNode, useState, useEffect, ReactText } from 'react';\nimport { Form, Row, Col, Input, Select, Button } from 'antd';\nimport { DeleteOutlined, PlusOutlined, DownOutlined, UpOutlined } from '@ant-design/icons';\nimport './MixSearch.less';\nimport { LabeledValue } from 'antd/lib/select';\n\nconst { Option } = Select;\nexport interface IMixSearchParamItem {\n\tname: string\n\ttype: TMixSearchType\n\ttitle?: string\n\tdefalutValue?: any\n\tplaceHolder?: string\n\toption?: LabeledValue[]\n\tmultiple?: boolean\n\tindexKey?: number\n\tused?: boolean\n}\n\nexport type TMixSearchType = 'input' | 'select' | 'datePicker' | 'rangePicker'\n\ninterface IProps {\n\tparams?: IMixSearchParamItem[]\n\tvalues?: Array<{ key: ReactText | undefined, value: ReactText | undefined }>\n\tonChange: (values: Array<{ key: ReactText | undefined, value: ReactText | undefined }>) => void;\n}\n\nconst MixSearch = (props: IProps) => {\n\tconst [form] = Form.useForm();\n\tconst [collapsed, setCollapsed]: [boolean, any] = useState(false);\n\tconst [typeArr, setTypeArr]: [(string | undefined)[], any] = useState([]);\n\n\t// 序列化数据\n\tconst formatParamsData = (data?: IMixSearchParamItem[]) => {\n\t\treturn (data || []).map((item, indexKey) => ({ ...item, indexKey }))\n\t}\n\tconst [paramsData, setParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [currentParamsData, setCurrentParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [paramsDataMap, setParamsDataMap] = useState<Map<string, IMixSearchParamItem>>(new Map())\n\n\tuseEffect(() => {\n\t\tif (props.values) {\n\t\t\tconst group = props.values.length ? props.values : [{\n\t\t\t\tkey: undefined,\n\t\t\t\tvalue: undefined\n\t\t\t}]\n\t\t\tform.setFieldsValue({\n\t\t\t\tgroup\n\t\t\t})\n\n\t\t\tconst tarData = [...currentParamsData]\n\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\tfor (let j = 0; j < group.length; j++) {\n\t\t\t\t\tconst value = group[j];\n\t\t\t\t\tif (value !== undefined && group[j].key === tarData[i].name) {\n\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetCurrentParamsData(tarData)\n\t\t}\n\t}, [props.values])\n\n\tuseEffect(() => {\n\t\tif (props.params && props.params.length) {\n\t\t\tconst formatData = formatParamsData(props.params)\n\t\t\tsetParamsData(formatData)\n\t\t\tconst dataMap = paramsDataMap\n\t\t\tfor (let i = 0; i < formatData.length; i++) {\n\t\t\t\tconst param = formatData[i];\n\t\t\t\tdataMap.set(param.name, param)\n\t\t\t}\n\t\t\tsetParamsDataMap(dataMap)\n\t\t}\n\t}, [props.params])\n\n\t/**利用表单获取查询字段 */\n\tconst handleFinishForm = async (values: any): Promise<void> => {\n\t\tconsole.log(values);\n\t\tconst preVal = values['group'].filter(((item: any) => !!item.key))\n\t\tconst tarVal = preVal.map((item: any) => ({ key: item.key, value: item.value }))\n\t\tprops.onChange(tarVal);\n\t};\n\n\t/**展开收起 */\n\tconst handleCollapsed = (): void => {\n\t\tsetCollapsed(!collapsed);\n\t};\n\n\t/**选择筛选类型 */\n\tconst handleSelectType = (name: string, index: number): void => {\n\t\tform.resetFields([['group', index, 'value']]);\n\t\tlet arr = [...typeArr];\n\t\tarr[index] = name;\n\t\tsetTypeArr(arr);\n\t};\n\n\t/**根据选择的类型，渲染input或select */\n\tconst handleRenderValueEl = (index: number): ReactNode => {\n\t\tlet key = form.getFieldValue(['group', index, 'key']);\n\t\tif (key) {\n\t\t\tconst currentItem = paramsDataMap.get(key)\n\t\t\tif (currentItem?.type === 'input') {\n\t\t\t\treturn <Input\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdefaultValue={currentItem.defalutValue}\n\t\t\t\t\tplaceholder={currentItem.placeHolder}\n\t\t\t\t\tonPressEnter={() => handlePressEnter()} />\n\t\t\t} else if (currentItem?.type === 'select') {\n\t\t\t\tconst currentOptions = currentItem?.option || []\n\t\t\t\treturn <Select\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdropdownMatchSelectWidth={500}\n\t\t\t\t\tshowSearch\n\t\t\t\t\tmode={key === 'label' ? 'multiple' : undefined}\n\t\t\t\t\toptionFilterProp=\"label\"\n\t\t\t\t\toptions={currentOptions.map(item => ({ label: item.label, value: item.value }))}\n\t\t\t\t// onDropdownVisibleChange={(open) => handleDropdown(open, key)}\n\t\t\t\t/>\n\t\t\t}\n\t\t} else {\n\t\t\treturn <Input style={{ width: '65%' }} onPressEnter={() => handlePressEnter()} />;\n\t\t}\n\t};\n\n\t/**下拉获取对应的数据，并判断是否存在下拉数据，没有则请求，有则不请求 */\n\t// const handleDropdown = async (open: boolean, key: string): Promise<void> => {\n\t// \tif (open) {\n\t// \t\tif (selectionData[key]) {\n\t// \t\t\treturn;\n\t// \t\t}\n\t// \t\ttry {\n\t// \t\t\tlet res = await getSelections(key);\n\t// \t\t\tlet data = { ...selectionData };\n\t// \t\t\tdata[key] = res.data.data;\n\t// \t\t\tsetSelectionData(data);\n\t// \t\t} catch (error) { }\n\t// \t}\n\t// };\n\n\t/**输入框回车操作 */\n\tconst handlePressEnter = (): void => {\n\t\tform.validateFields();\n\t};\n\n\treturn (\n\t\t<Form\n\t\t\t// {...formConfig}\n\t\t\tclassName=\"cmdb-mixsearch bg-title\"\n\t\t\tform={form}\n\t\t\tonFinish={handleFinishForm}\n\t\t\tinitialValues={{\n\t\t\t\tgroup: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: undefined,\n\t\t\t\t\t\tvalue: undefined,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t>\n\t\t\t<Row className=\"cmdb-mixsearch-content\" gutter={16} style={{ marginLeft: 0, marginRight: 0, ...collapsed ? { height: 70 } : { height: 'auto' } }}>\n\t\t\t\t<Form.List name={`group`}>\n\t\t\t\t\t{(fields, { add, remove }) => {\n\t\t\t\t\t\treturn <>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfields.map((field, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`mixSearch_${field.key}_${index}`}>\n\t\t\t\t\t\t\t\t\t\t\t<Row align=\"middle\" gutter={8}>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <Col className=\"cmdb-mixsearch-name\">名称</Col> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input.Group compact>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'key']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: '请选择key' }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// initialValue={'testParams'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '35%' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"请选择\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// handleSelectType(value, index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst selectActionRemove = (value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).filter((item: any) => !!item).map((item: any) => item.key)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (!usedKey.includes(item.name)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectActionRemove(value)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{currentParamsData.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option style={{ display: item.used ? 'none' : 'inherit' }} key={`mixSearch_${item.name}_${index}`} value={item.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.title || item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshouldUpdate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'value']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: '请填写value' }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{handleRenderValueEl(index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Input.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-delete\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).map((item: any) => item ? item.key : undefined)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tremove(index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {index === fields.length - 1 && index < (paramsData.length - 1) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{paramsData.length !== fields.length && (\n\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add d-il\" onClick={() => {\n\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t}}\n\t\t\t\t</Form.List>\n\n\t\t\t\t<Col flex={1}>\n\t\t\t\t\t<Row justify=\"end\">\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t\t查询\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"cmdb-mixsearch-collapsed\">\n\t\t\t\t<Row onClick={() => handleCollapsed()} justify=\"center\" align=\"middle\">\n\t\t\t\t\t{collapsed ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Col>展开</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<DownOutlined />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Col>收起</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<UpOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t</Form>\n\t);\n};\n\nexport default MixSearch;\n","import { SearchOutlined } from '@ant-design/icons';\nimport { Input } from 'antd';\nimport React, { useState, ChangeEvent, useEffect } from 'react';\nimport './InputSearch.less';\n\ninterface IProps {\n    labelName?: string,\n    width?: string,\n    placeholder?: string,\n    maxLength?: number,\n    maxHeight?: number,\n    // 是否开启前端搜索匹配\n    isOpenSearchMatch?: boolean,\n    loading?: boolean | JSX.Element,\n    // 配置提示列表\n    options?: string[],\n    // 当配置value时，即为可控组件\n    value?: string,\n    disabled?: boolean\n    // 按回车时回调\n    onSearch?: (value: string) => void,\n    // 输入字符、按下回车时回调\n    onChange?: (value: string) => void,\n    // 点击option中的item\n    onClick?: (value: string) => void,\n    // 滚动条到底时触发\n    onScrollButtom?: () => void\n}\n\nexport default function InputSearch(props: IProps): JSX.Element {\n    const id = Math.random().toString(36).substring(2);\n    let inputRef: any;\n\n    const [dataCache, setDataCache] = useState<string[]>(props.options || []);\n    const [value, setValue] = useState(props.value || '');\n\n    useEffect(() => {\n        const dataFilter = props.isOpenSearchMatch ? (props.options || []).filter(item => {\n            return item.indexOf(value) !== -1;\n        }) : (props.options || []);\n        setDataCache(dataFilter);\n    }, [props.options]);\n\n    useEffect(() => {\n        setValue(props.value || '');\n        // props.onChange && props.onChange(props.value);\n    }, [props.value]);\n\n    const handleChange = (value: string): void => {\n        setValue(value);\n        props.onChange && props.onChange(value);\n    };\n\n    const handleClick = (value: string): void => {\n        handleChange(value);\n        props.onClick && props.onClick(value);\n    };\n\n    const handleEnterKey = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n        // 回车\n        if (e.nativeEvent.keyCode === 13) {\n            inputRef.blur && inputRef.blur();\n            props.onSearch && props.onSearch(e.currentTarget.value);\n        }\n    };\n\n    const highlightKeyWord = (item: string): JSX.Element => {\n        const keyWord = value;\n        const index = item.indexOf(value);\n        if (index === -1) {\n            return <span>{item}</span>;\n        }\n        const preStr = item.substring(0, index);\n        const nextStr = item.substring(index + value.length);\n        return <span>{preStr}<span className=\"highlight\">{keyWord}</span>{nextStr}</span>;\n    };\n\n    const debounce = (fun: any, time = 500): any => {\n        let timer: ReturnType<typeof setTimeout>;\n        return function (...args: any): void {\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                fun && fun.apply(null, [...args]);\n            }, time);\n        };\n    };\n\n    const debounceScroll = debounce(props.onScrollButtom);\n\n    const handleScroll = (e: React.UIEvent<HTMLElement>): void => {\n        e.stopPropagation();\n        // console.log({\n        //     event: e,\n        //     target: e.target, // Note 1* scrollTop is undefined on e.target\n        //     currentTarget: e.currentTarget,\n        //     scrollTop: e.currentTarget.scrollTop,\n        //     scrollHeight: e.currentTarget.scrollHeight,\n        //     clientHeight: e.currentTarget.clientHeight\n        // });\n        const { currentTarget } = e;\n        const { scrollTop, clientHeight, scrollHeight } = currentTarget;\n        const difference = scrollHeight - clientHeight - scrollTop;\n        if (difference < 20) {\n            props.onScrollButtom && debounceScroll();\n        }\n    };\n\n    return (\n        <div className=\"select-down-modern\">\n            {\n                props.labelName ? <label htmlFor={id} className=\"pb4 mb0 fs12 d-b\">{props.labelName}</label> : null\n            }\n            <div className=\"p-r d-f ac\" style={{ width: props.width || 100 + '%' }}>\n                <Input\n                    style={{ width: '100%' }}\n                    disabled={props.disabled}\n                    id={id}\n                    placeholder={props.placeholder || ''}\n                    maxLength={props.maxLength || 200}\n                    onChange={(e: ChangeEvent<HTMLInputElement>): void => handleChange(e.target.value)}\n                    onKeyPress={handleEnterKey}\n                    value={value}\n                    ref={element => inputRef = element}\n                />\n                <SearchOutlined className=\"p-a r0 mr8\" />\n            </div>\n\n            {\n                // 输入提示\n                dataCache.length ? <ul className=\"select-option shadow\" onScroll={handleScroll} style={{ 'maxHeight': `${props.maxHeight}px` }}>\n                    {\n                        props.loading ? <div className=\"p-s z9 ta-r\" style={{ right: `${0}px`, top: `${0}px` }}>\n                            <div className=\"d-il p-a\" style={{ right: `${8}px`, top: `${0}px` }}></div>\n                        </div> : null\n                    }\n                    {\n                        dataCache.map((item, index) => {\n                            return <li className=\"ellip1\" onMouseDown={(): void => handleClick(item)} key={index}>{highlightKeyWord(item)}</li>;\n                        })\n                    }\n                </ul> : null\n            }\n        </div>\n    );\n}","import { Button, Col, Collapse, DatePicker, Form, FormInstance, Input, message, Radio, Row, Steps } from 'antd'\nimport { Rule, RuleObject } from 'antd/lib/form'\nimport Select, { LabeledValue } from 'antd/lib/select'\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport moment from \"moment\";\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport InputSearch from '../InputSearch/InputSearch';\n\ninterface IProps {\n    primaryKey?: string\n    form?: FormInstance\n    config?: IDynamicFormConfigItem[]\n    configGroup?: IDynamicFormGroupConfigItem[]\n    formChangeRes?: IFormChangeRes\n    linkageConfig?: ILinkageConfig[]\n    onRetryInfoChange?: (value: string) => void\n}\n\nexport interface ILinkageConfig {\n    dep: string[]\n    effect: string\n    effectOption: Record<string | number, LabeledValue[]>\n}\n\ninterface IFormChangeRes {\n    currentChange: Record<string, any>\n    allValues: Record<string, any>\n}\nexport interface IDynamicFormGroupConfigItem {\n    expanded: boolean\n    group: string\n    config: IDynamicFormConfigItem[]\n}\n\nexport interface IDynamicFormConfigItem {\n    name: string\n    label: string\n    type: TDynamicFormType\n    defaultValue?: number | string\n    required?: boolean\n    placeHolder?: string\n    options?: LabeledValue[]\n    rules?: Rule[]\n    disable?: boolean\n    description?: any\n    multiple?: boolean,\n    list?: IDynamicFormConfigItem[]\n    data: Record<string, any>\n}\n\nexport type TDynamicFormType = 'input' | 'textArea' | 'select' | 'datePicker' | 'rangePicker' | 'radio' | 'checkout' | 'match-input' | 'input-select'\n\nexport function calculateId(strList: string[]): number {\n    const str2Num = (str: string) => {\n        const res = (str || '').split('').reduce((pre, next) => pre + next.charCodeAt(0), 0)\n        return res\n    }\n    const sum = strList.reduce((pre, next) => pre + str2Num(next), 0)\n    return sum\n}\n\nexport default function DynamicForm(props: IProps) {\n\n    const [current, setCurrent] = useState(0);\n    const [currentConfig, _setCurrentConfig] = useState(props.config)\n    const currentConfigRef = useRef(props.config);\n    const setCurrentConfig = (data: IDynamicFormConfigItem[] | undefined): void => {\n        currentConfigRef.current = data;\n        _setCurrentConfig(data);\n    };\n\n    const [currentConfigGroup, _setCurrentConfigGroup] = useState(props.configGroup)\n    const currentConfigGroupRef = useRef(props.configGroup);\n    const setCurrentConfigGroup = (data: IDynamicFormGroupConfigItem[] | undefined): void => {\n        currentConfigGroupRef.current = data;\n        _setCurrentConfigGroup(data);\n    };\n\n    const findOptionInLinkAge = (field: string, config: ILinkageConfig[]): Array<{\n        effect: string\n        option: LabeledValue[]\n    }> => {\n        const res = config.filter(configItem => configItem.dep.includes(field)).map(item => {\n            const values = item.dep.map(item => props.form?.getFieldValue(item)).filter(item => !(item === undefined || item === null))\n            const valueId = calculateId(values)\n            return {\n                effect: item.effect,\n                option: item.effectOption[valueId] || []\n            }\n        })\n        return res\n    }\n\n    const setValueInConfig = (field: string, props: Record<string, any>) => {\n        const tarConfig = currentConfigRef.current ? [...currentConfigRef.current] : []\n        if (tarConfig) {\n            for (let i = 0; i < tarConfig.length; i++) {\n                const item = tarConfig[i];\n                if (item.name === field) {\n                    tarConfig[i] = {\n                        ...item,\n                        ...props\n                    }\n                }\n            }\n        }\n        setCurrentConfig(tarConfig)\n    }\n\n    const setValueInConfigGroup = (field: string, props: Record<string, any>) => {\n        const tarConfigGroup = currentConfigGroupRef.current ? [...currentConfigGroupRef.current] : []\n        for (let i = 0; i < tarConfigGroup.length; i++) {\n            const configList = [...tarConfigGroup[i].config];\n            for (let j = 0; j < configList.length; j++) {\n                const item = configList[j];\n                if (item.name === field) {\n                    configList[j] = {\n                        ...item,\n                        ...props\n                    }\n                }\n            }\n            tarConfigGroup[i] = {\n                ...tarConfigGroup[i],\n                config: configList\n            }\n        }\n        setCurrentConfigGroup(tarConfigGroup)\n    }\n\n    const resetFieldProps = (field: string, linkageConfig: ILinkageConfig[]) => {\n        const optionInlinkAge = findOptionInLinkAge(field, linkageConfig)\n        optionInlinkAge.forEach(item => {\n            props.form?.setFieldsValue({ [item.effect]: undefined })\n            setValueInConfig(item.effect, { options: item.option })\n            setValueInConfigGroup(item.effect, { options: item.option })\n        })\n    }\n\n    useEffect(() => {\n        if (props.formChangeRes && props.linkageConfig) {\n            const { currentChange } = props.formChangeRes\n            resetFieldProps(Object.keys(currentChange)[0], props.linkageConfig)\n        }\n    }, [props.formChangeRes])\n\n    // 表单联动初始化\n    useEffect(() => {\n        setCurrentConfig(props.config)\n        setCurrentConfigGroup(props.configGroup)\n        const formValues = props.form?.getFieldsValue() || {}\n        Object.entries(formValues).forEach(([key, value]) => {\n            if (value !== undefined) {\n                resetFieldProps(key, props.linkageConfig || [])\n            }\n        })\n\n    }, [props.configGroup, props.config])\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        setCurrent(current - 1);\n    };\n\n    const renderInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules: Rule[] = [\n        //     { required: config.required, message: `请输入${config.label}` },\n        //     config.rule ? { pattern: new RegExp(`/^${config.rule}$/`), message: '请按正确的规则输入' } : undefined,\n        // ].filter(item => !!item) as Rule[]\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <Input disabled={config.disable} placeholder={`请输入${config.label}`} />\n        </Form.Item>\n    }\n\n    const renderMatchInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n\n        return <Form.Item key={`dynamicForm_${config.name}_noStyle`} noStyle shouldUpdate={(pre, next) => {\n            // todo:更新有点问题\n            // return pre[config.name] != pre[config.name]\n            return JSON.stringify(pre) != JSON.stringify(next)\n        }}>\n            {\n                ({ getFieldValue, setFieldsValue }) => {\n                    const templateText = `${config.defaultValue}`\n                    const matchList = templateText.match(/\\$\\{\\w*}/gi) || []\n                    let value = templateText\n                    matchList.forEach(item => {\n                        const itemKey = item.replace(/^\\$\\{/, '').replace(/\\}$/, '')\n                        const itemValue = getFieldValue(itemKey)\n                        if (itemValue !== undefined) {\n                            value = value.replace(item, itemValue)\n                        }\n                    })\n\n                    if (getFieldValue(config.name) !== value) {\n                        setFieldsValue({\n                            [config.name]: value\n                        })\n                    }\n\n                    return <Form.Item\n                        key={`dynamicForm_${config.name}`}\n                        label={config.label}\n                        name={config.name}\n                        rules={config.rules}\n                        extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n                        {...itemProps}\n                    >\n                        <Input disabled={true} />\n                    </Form.Item>\n                }\n            }\n        </Form.Item>\n    }\n\n    const renderInputSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `请选择${config.label}` },\n        // ]\n        const options: string[] = (config.options || []).map(item => item.label as string)\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <InputSearch isOpenSearchMatch={true} disabled={config.disable} placeholder={`请选择${config.label}`} options={options} />\n        </Form.Item>\n    }\n\n    const renderTextArea = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <Input.TextArea autoSize={{ minRows: 4 }} disabled={config.disable} placeholder={`请输入${config.label}`} />\n        </Form.Item>\n    }\n    const renderSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `请选择${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <Select\n                onClick={() => {\n                    console.log('click', props.form?.getFieldsValue())\n                    // props.form?.setFieldsValue({ app_group: \"g_other_tme_infrastructure_tme_central_kuwo\" })\n                }}\n                style={{ width: '100%' }}\n                mode={config.multiple ? 'multiple' : undefined}\n                onChange={(value) => {\n                    !!config.data.retry_info && props.onRetryInfoChange && props.onRetryInfoChange(value)\n                }}\n                showSearch\n                disabled={config.disable}\n                optionFilterProp=\"label\"\n                placeholder={`请选择${config.label}`}\n                options={options} />\n        </Form.Item>\n    }\n    const renderRadio = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `请选择${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            {...itemProps}\n        >\n            <Radio.Group options={options} />\n        </Form.Item>\n    }\n    const renderDatePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name=\"fromDate\"\n            rules={[{ required: true, message: '请选择时间' }]}\n            {...itemProps}\n        >\n            <DatePicker showTime disabledDate={(current) => {\n                return current && current > moment().endOf('day');\n            }} />\n        </Form.Item>\n    }\n    const renderRangePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name=\"fromDate\"\n            rules={[{ required: true, message: '请选择时间' }]}\n            {...itemProps}\n        >\n            <DatePicker showTime disabledDate={(current) => {\n                return current && current > moment().endOf('day');\n            }} />\n        </Form.Item>\n    }\n\n    const dispatchRenderFormItem = (item: IDynamicFormConfigItem, itemProps: Record<string, any> = {}): JSX.Element | null => {\n        switch (item.type) {\n            case 'input':\n                return renderInput(item, itemProps)\n            case 'match-input':\n                return renderInput(item, itemProps)\n            // return renderMatchInput(item, itemProps)\n            case 'input-select':\n                return renderInputSelect(item, itemProps)\n            case 'textArea':\n                return renderTextArea(item, itemProps)\n            case 'select':\n                return renderSelect(item, itemProps)\n            case 'datePicker':\n                return renderDatePicker(item, itemProps)\n            case 'rangePicker':\n                return renderRangePicker(item, itemProps)\n            case 'radio':\n                return renderRadio(item, itemProps)\n            default:\n                return null\n        }\n    }\n\n    const renderFormItem = (config: IDynamicFormConfigItem[]): Array<any | null> => {\n        return (config || []).map(item => {\n            if (item.list && item.list.length) {\n                const formList = <Form.List key={`dynamicForm_${item.name}`} name={item.name}>\n                    {(fields, { add, remove }) => (\n                        <>\n                            {fields.map(({ key, name, ...restField }) => (\n                                <div key={key} className=\"bor b-side pt32 plr16 mb16\">\n                                    {\n                                        item.list && item.list.map(listItem => {\n                                            return dispatchRenderFormItem(listItem, {\n                                                ...restField,\n                                                name: [name, listItem.name]\n                                            })\n                                        })\n                                    }\n                                    {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\n                                    <Form.Item wrapperCol={{ offset: 5 }}>\n                                        <Button danger onClick={() => remove(name)} block icon={<MinusCircleOutlined />}>\n                                            删除该项\n                                        </Button>\n                                    </Form.Item>\n                                </div>\n                            ))}\n                            <Form.Item noStyle className=\"w100\">\n                                <Button type=\"dashed\" className=\"w100\" onClick={() => add()} block icon={<PlusOutlined />}>\n                                    增加一项\n                                </Button>\n                            </Form.Item>\n                        </>\n                    )}\n                </Form.List>\n                return formList\n            } else {\n                return dispatchRenderFormItem(item)\n            }\n        })\n    }\n\n    return (\n        <>\n            <Form.Item\n                key={`dynamicForm_id`}\n                name={props.primaryKey || 'id'}\n                noStyle\n                hidden\n            >\n                <Input />\n            </Form.Item>\n            {/* {\n                props.configGroup && props.configGroup.length ?\n                    (props.configGroup || []).map(item => {\n                        return <div className=\"pb16\">\n                            <Row className=\"strong fs16 mb16 bg-module\"><Col ><span className=\"d-il pl4 bor-l b-theme ptb4\">{item.group}</span></Col></Row>\n                            {renderFormItem(item.config)}\n                        </div>\n                    }) : renderFormItem(props.config || [])\n            } */}\n            {\n                currentConfigGroup && currentConfigGroup.length ? <>\n                    <Steps current={current}>\n                        {\n                            (currentConfigGroup || []).map((item, index) => {\n                                return <Steps.Step key={index} title={item.group} />\n                            })\n                        }\n                    </Steps>\n                    <div className=\"pt32\">\n                        {\n                            (currentConfigGroup || []).map((item, index) => {\n                                return <div key={index} className={[current === index ? 'p-r z9' : 'p-a z-99 v-h l-10000'].join(' ')}>\n                                    {renderFormItem(item.config)}\n                                </div>\n                            })\n                        }\n                    </div>\n                    <div className=\"ta-c pt32\">\n                        {current > 0 && (\n                            <Button onClick={() => prev()}>\n                                上一步\n                            </Button>\n                        )}\n                        {current < (currentConfigGroup || []).length - 1 && (\n                            <Button type=\"primary\" className=\"ml16\" onClick={() => {\n                                if (props.form) {\n                                    const currentConfigGroupNameList = currentConfigGroup[current].config.map(item => item.name)\n                                    props.form.validateFields(currentConfigGroupNameList).then(() => {\n                                        next()\n                                    }).catch(err => {\n                                        console.log(err)\n                                    })\n                                } else {\n                                    next()\n                                }\n                            }}>\n                                下一步\n                            </Button>\n                        )}\n                        <div>\n                            {current === (currentConfigGroup || []).length - 1 && (\n                                <div className=\"pt8 c-hint-b\">点击确定完成提交</div>\n                            )}\n                        </div>\n                    </div>\n                </> : renderFormItem(currentConfig || [])\n            }\n\n            {/* {\n                props.configGroup && props.configGroup.length ?\n                    <Collapse defaultActiveKey={(props.configGroup || []).map((item, idx) => idx)} ghost expandIconPosition='right'>\n                        {\n                            (props.configGroup || []).map((item, index) => {\n                                return <Collapse.Panel key={index} header={<span className=\"strong fs16 pl8 bor-l b-theme\">{item.group}</span>}>\n                                    <div className=\"pb16\">\n                                        {renderFormItem(item.config)}\n                                    </div>\n                                </Collapse.Panel>\n                            })\n                        }\n                    </Collapse> : renderFormItem(props.config || [])\n            } */}\n\n        </>\n    )\n}\n","import React, { ReactText, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Input, DatePicker, TablePaginationConfig, Row, message, Space, Menu, Dropdown, Modal, Spin, Form, Tag, Popover, Tooltip, Select, FormInstance, Upload, UploadProps, Drawer, notification } from 'antd';\nimport { Content } from 'antd/lib/layout/layout';\nimport TitleHeader from '../components/TitleHeader/TitleHeader';\nimport TableBox from '../components/TableBox/TableBox';\nimport moment from \"moment\";\nimport { CopyOutlined, DownOutlined, ExclamationCircleOutlined, ExportOutlined, PlusOutlined, QuestionCircleOutlined, RollbackOutlined, UploadOutlined } from '@ant-design/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getParam, getTableScroll } from '../util';\nimport ModalForm from '../components/ModalForm/ModalForm';\nimport cookies from 'js-cookie';\nimport { IADUGTemplateActionItem, IAppMenuItem } from '../api/interface/kubeflowInterface';\nimport { getADUGTemplateList, getADUGTemplateApiInfo, actionADUGTemplateDelete, getADUGTemplateDetail, actionADUGTemplateAdd, actionADUGTemplateUpdate, actionADUGTemplateSingle, actionADUGTemplateMuliple, getCustomDialog, actionADUGTemplateDownData, actionADUGTemplateRetryInfo } from '../api/kubeflowApi';\nimport { ColumnsType } from 'antd/lib/table';\nimport MixSearch, { IMixSearchParamItem } from '../components/MixSearch/MixSearch';\nimport DynamicForm, { calculateId, IDynamicFormConfigItem, IDynamicFormGroupConfigItem, ILinkageConfig, TDynamicFormType } from '../components/DynamicForm/DynamicForm';\nimport { columnConfig } from './columnConfig';\n\ninterface fatchDataParams {\n    pageConf: TablePaginationConfig\n    params: any[]\n    paramsMap: Record<string, any>\n    sorter?: ISorterParam\n}\n\ninterface ISorterParam {\n    order_column: string\n    order_direction: 'desc' | 'asc'\n}\n\nexport default function TaskListManager(props?: IAppMenuItem) {\n    const PAGE_SIZE = 20;\n    const navigate = useNavigate();\n    const location = useLocation()\n    const [dataList, setDataList] = useState<any[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [loadingAdd, setLoadingAdd] = useState(false)\n    const [visableAdd, setVisableAdd] = useState(false)\n    const [loadingUpdate, setLoadingUpdate] = useState(false)\n    const [visableUpdate, setVisableUpdate] = useState(false)\n    const [loadingDetail, setLoadingDetail] = useState(false)\n    const [visableDetail, setVisableDetail] = useState(false)\n    const [selectedRowKeys, setSelectedRowKeys] = useState<ReactText[]>([])\n    const [dateInfo, setDateInfo] = useState<{\n        startTime: string,\n        endTime: string\n    }>({\n        startTime: moment().subtract(1, 'd').startOf('day').format('YYYY-MM-DD HH:mm:ss'),\n        endTime: moment().subtract(1, 'd').endOf('day').format('YYYY-MM-DD HH:mm:ss')\n    })\n    const pageInfoInit: TablePaginationConfig = {\n        current: 1,\n        pageSize: PAGE_SIZE,\n        total: 0,\n        showSizeChanger: true,\n        showQuickJumper: true,\n        pageSizeOptions: [20, 50, 100, 500],\n        showTotal: (total) => `共${total}条`,\n    };\n    const [pageInfo, setPageInfo] = useState<TablePaginationConfig>(pageInfoInit);\n    const [currentColumns, setCurrentColumns] = useState<ColumnsType<any>>([])\n    // const customFilter: IMixSearchParamItem[] = [\n    //     { name: 'test1', type: 'input' },\n    //     { name: 'test2', type: 'select', option: [{ label: 'title1', value: 'value1' }, { label: 'title2', value: 'value2' }] },\n    //     { name: 'test3', type: 'input' },\n    //     { name: 'test4', type: 'select' },\n    // ]\n    const [filterParams, setFilterParams] = useState<IMixSearchParamItem[]>([])\n    const [filterValues, _setFilterValues] = useState<Array<{ key: ReactText | undefined, value: ReactText | undefined }>>([])\n    const filterValuesRef = useRef(filterValues);\n    const setFilterValues = (data: Array<{ key: ReactText | undefined, value: ReactText | undefined }>): void => {\n        filterValuesRef.current = data;\n        _setFilterValues(data);\n    };\n    const [dynamicFormConfigAdd, setDynamicFormConfigAdd] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormConfigUpdate, setDynamicFormConfigUpdate] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormGroupConfigAdd, setDynamicFormGroupConfigAdd] = useState<IDynamicFormGroupConfigItem[]>([])\n    const [dynamicFormGroupConfigUpdate, setDynamicFormGroupConfigUpdate] = useState<IDynamicFormGroupConfigItem[]>([])\n    const [dynamicFormDataAdd, setDynamicFormDataAdd] = useState({})\n    const [updateColumnsMap, setUpdateColumnsMap] = useState<Record<string, any>>({})\n    const [labelMap, _setLabelMap] = useState<Record<string, string>>({})\n    const labelMapRef = useRef(labelMap);\n    const setLabelMap = (data: Record<string, string>): void => {\n        labelMapRef.current = data;\n        _setLabelMap(data);\n    };\n    const [dataDetail, setDataDetail] = useState<Array<{ label: string, value: any, key: string }>>([])\n    const [tableWidth, setTableWidth] = useState(1000)\n    const [permissions, setPermissions] = useState<string[]>([])\n    // const [tips, setTips] = useState<Array<{ label: string, value: any }>>([])\n    const [filterParamsMap, setFilterParamsMap] = useState<Record<string, any>>({})\n    const [helpUrl, setHelpUrl] = useState<string | null>()\n\n    const [baseUrl, _setBaseUrl] = useState<string>()\n    const baseUrlRef = useRef(baseUrl);\n    const setBaseUrl = (data: string): void => {\n        baseUrlRef.current = data;\n        _setBaseUrl(data);\n    };\n    const [isImportData, setIsImportData] = useState(false)\n    const [isDownLoadData, setIsDownLoadData] = useState(false)\n    const [columnRelateFormat, setColumnRelateFormat] = useState<ILinkageConfig[]>([])\n    const [multipleAction, setMultipleAction] = useState<IADUGTemplateActionItem[]>([])\n    const [sorterParam, setSorterParam] = useState<{\n        order_column: string\n        order_direction: 'desc' | 'asc'\n    }>()\n    const [primaryKey, setPrimaryKey] = useState('')\n    const [labelTitle, setLabelTitle] = useState('')\n\n\n    const [scrollY, setScrollY] = useState(\"\")\n\n    const fetchDataParams = {\n        pageConf: pageInfoInit,\n        params: [],\n        paramsMap: filterParamsMap,\n        sorter: undefined\n    }\n\n    useEffect(() => {\n        setScrollY(getTableScroll())\n    }, [])\n\n    useEffect(() => {\n        if (props && props.disable) {\n            navigate('/404')\n        }\n    }, [])\n\n    // 表单字段处理\n    const createDyFormConfig = (data: Record<string, any>[], label_columns: Record<string, any>, description_columns: Record<string, any>): IDynamicFormConfigItem[] => {\n        return data.map((item, index) => {\n            let type = item['ui-type'] || 'input'\n            if (type === 'select2') {\n                type = 'select'\n            }\n            const label = item.label || label_columns[item.name]\n\n            // 校验规则\n            const rules = (item.validators || []).map((item: any) => {\n                switch (item.type) {\n                    case 'DataRequired':\n                        return { required: true, message: `请输入${label}` }\n                    case 'Regexp':\n                        return { pattern: new RegExp(`${item.regex}`), message: `请按正确的规则输入` }\n                    case 'Length':\n                        return { min: item.min, max: item.max, message: `请输入正确的长度` }\n                    default:\n                        return undefined\n                }\n            }).filter((item: any) => !!item)\n\n            const list = createDyFormConfig((item.info || []), label_columns, description_columns)\n\n            const res: IDynamicFormConfigItem = {\n                label,\n                type,\n                rules,\n                list,\n                name: item.name,\n                disable: item.disable,\n                description: item.description || description_columns[item.name] || undefined,\n                required: item.required,\n                defaultValue: item.default === '' ? undefined : item.default,\n                multiple: item['ui-type'] && item['ui-type'] === 'select2',\n                options: (item.values || []).map((item: any) => ({ label: item.value, value: item.id })),\n                data: { ...item }\n            }\n            return res\n        })\n    }\n\n    useEffect(() => {\n        const targetId = getParam('targetId')\n        const url = targetId ? `/dimension_remote_table_modelview/${targetId}/api/` : props?.url\n\n        getADUGTemplateApiInfo(url).then(res => {\n            const {\n                list_columns,\n                label_columns,\n                filters,\n                add_columns,\n                edit_columns,\n                permissions,\n                description_columns,\n                add_fieldsets,\n                edit_fieldsets,\n                help_url,\n                order_columns,\n                action,\n                route_base,\n                column_related,\n                primary_key,\n                label_title,\n                cols_width,\n                import_data,\n                download_data\n            } = res.data\n            const actionwidth = 80 || [props?.related, permissions.includes('can_show'), permissions.includes('can_edit'), permissions.includes('can_delete')].filter(item => !!item).length * 60\n            const hasAction = props?.related || permissions.includes('can_show') || permissions.includes('can_edit') || permissions.includes('can_delete')\n            const cacheColumns = localStorage.getItem(`tablebox_${location.pathname}`)\n            const cacheColumnsWidthMap = (JSON.parse(cacheColumns || '[]')).reduce((pre: any, next: any) => ({ ...pre, [next.dataIndex]: next.width }), {});\n\n            const columnRelatedFormat: ILinkageConfig[] = Object.entries(column_related || {})\n                .reduce((pre: any[], [key, value]) => ([...pre, {\n                    dep: value.src_columns,\n                    effect: value.des_columns.join(''),\n                    effectOption: value.related.reduce((ePre: any, eNext) => ({ ...ePre, [calculateId(eNext.src_value)]: eNext.des_value.map(item => ({ label: item, value: item })) }), {})\n                }]), [])\n\n            // 表格字段处理\n            const listColumns = list_columns.map(column => {\n                return {\n                    title: label_columns[column] || column,\n                    dataIndex: column,\n                    key: column,\n                    sorter: order_columns.includes(column) ? (a: any, b: any) => a[column] - b[column] : undefined,\n                    render: (text: any, record: any) => {\n                        if (text === undefined || text === '') {\n                            return '-'\n                        }\n                        if (cols_width[column] && cols_width[column].type?.indexOf('ellip') !== -1) {\n                            return <Tooltip title={<span className=\"tips-content\" dangerouslySetInnerHTML={{ __html: text }}></span>} placement=\"topLeft\">\n                                <div className={cols_width[column].type} dangerouslySetInnerHTML={{ __html: text }}>\n                                </div>\n                            </Tooltip>\n                        }\n                        if (Object.prototype.toString.call(text) === '[object Object]') {\n                            const tarRes = Object.entries(text).reduce((pre: any, [label, value]) => [...pre, { label, value }], [])\n                            if (!tarRes.length) {\n                                return '-'\n                            }\n                            return <div style={{ overflow: 'auto', maxHeight: 100 }}>\n                                {\n                                    tarRes.map((item: any, index: number) => {\n                                        return <div key={`table_itemvalue_${index}`}>{label_columns[item.label] || item.label}:{item.value}</div>\n                                    })\n                                }\n                            </div>\n                        }\n                        return <div style={{ overflow: 'auto', maxHeight: 100 }} dangerouslySetInnerHTML={{ __html: text }}></div>\n                    },\n                    width: cacheColumnsWidthMap[column] || (cols_width[column] && cols_width[column].width) || 100\n                }\n            })\n\n            const actionList = Object.entries(action || {}).reduce((pre: any, [name, value]) => ([...pre, { ...value }]), [])\n            const multipleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.multiple)\n            const singleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.single)\n\n            const tableAction: any = {\n                title: '操作',\n                width: actionwidth,\n                dataIndex: 'handle',\n                key: 'handle',\n                align: 'right',\n                fixed: 'right',\n                render: (text: any, record: any) => {\n                    return (\n                        <Space size=\"middle\">\n                            {\n                                hasAction ? <Dropdown overlay={<Menu>\n                                    {\n                                        permissions.includes('can_show') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableDetail(true)\n                                            fetchDataDetail(record[primary_key])\n                                        }}>\n                                            详情\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_edit') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableUpdate(true)\n                                            getADUGTemplateApiInfo(route_base, record[primary_key]).then(res => {\n                                                const { edit_columns, label_columns, description_columns } = res.data\n                                                const formConfigUpdate: IDynamicFormConfigItem[] = createDyFormConfig(edit_columns, label_columns, description_columns)\n                                                const formGroupConfigUpdate: IDynamicFormGroupConfigItem[] = edit_fieldsets.map(group => {\n                                                    const currentData = group.fields.map(field => updateColumnsMap[field]).filter(item => !!item)\n                                                    return {\n                                                        group: group.group,\n                                                        expanded: group.expanded,\n                                                        config: createDyFormConfig(currentData, label_columns, description_columns)\n                                                    }\n                                                })\n\n                                                console.log(formConfigUpdate);\n                                                setDynamicFormConfigUpdate(formConfigUpdate)\n                                                setDynamicFormGroupConfigUpdate(formGroupConfigUpdate)\n\n                                                fetchDataDetail(record[primary_key])\n                                            }).catch(() => {\n                                                message.warn('用户没有修改权限')\n                                            })\n                                        }}>\n                                            修改\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_delete') ? <Menu.Item><div className=\"c-fail cp\" onClick={() => {\n                                            Modal.confirm({\n                                                title: '删除',\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: '确定删除?',\n                                                okText: '确认删除',\n                                                cancelText: '取消',\n                                                okButtonProps: { danger: true },\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateDelete(`${route_base}${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success('删除成功');\n                                                            console.log(filterValuesRef.current);\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error('删除失败');\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>\n                                            删除\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        props?.related?.map((item, index) => {\n                                            return <Menu.Item key={`moreAction_${index}`}>\n                                                <div className=\"link\" onClick={() => {\n                                                    navigate(`${location.pathname}/${item.name}?id=${record[primary_key]}`)\n                                                }}>\n                                                    {item.title}\n                                                </div>\n                                            </Menu.Item>\n                                        })\n                                    }\n                                    {\n                                        !!singleAction.length && singleAction.map((action, index) => {\n                                            return <Menu.Item key={`table_action_${index}`}><div className=\"link\" onClick={() => {\n                                                Modal.confirm({\n                                                    title: action.confirmation,\n                                                    icon: <ExclamationCircleOutlined />,\n                                                    content: '',\n                                                    okText: `确认${action.confirmation}`,\n                                                    cancelText: '取消',\n                                                    onOk() {\n                                                        return new Promise((resolve, reject) => {\n                                                            actionADUGTemplateSingle(`${route_base}action/${action.name}/${record[primary_key]}`)\n                                                                .then((res) => {\n                                                                    resolve('');\n                                                                })\n                                                                .catch((err) => {\n                                                                    reject();\n                                                                });\n                                                        })\n                                                            .then((res) => {\n                                                                message.success('操作成功');\n                                                                fetchData({\n                                                                    ...fetchDataParams,\n                                                                    pageConf: pageInfo,\n                                                                    params: filterValuesRef.current,\n                                                                    paramsMap: filters\n                                                                });\n                                                            })\n                                                            .catch(() => {\n                                                                message.error('操作失败');\n                                                            });\n                                                    },\n                                                    onCancel() { },\n                                                });\n                                            }}>\n                                                {action.text}\n                                            </div></Menu.Item>\n                                        })\n                                    }\n                                </Menu>}>\n                                    <div className=\"link\">更多<DownOutlined /></div>\n                                </Dropdown> : null\n                            }\n                        </Space>\n                    );\n                },\n            }\n            const tarColumns: React.SetStateAction<ColumnsType<any>> = [...listColumns]\n            if (hasAction) {\n                tarColumns.push(tableAction)\n            }\n\n            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            const updateColumnsMap = edit_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                return {\n                    group: group.group,\n                    expanded: group.expanded,\n                    config: createDyFormConfig(currentData, label_columns, description_columns)\n                }\n            })\n\n            const tarFilter: IMixSearchParamItem[] = Object.entries(filters)\n                .reduce((pre: any, [name, value]) => {\n                    return [...pre, {\n                        name,\n                        type: value['ui-type'] || 'input',\n                        title: label_columns[name],\n                        oprList: value.filter.map(item => item.operator),\n                        defalutValue: value.default === '' ? undefined : value.default,\n                        option: value.values ? value.values.map(item => ({ label: item.value, value: item.id })) : undefined\n                    }]\n                }, [])\n\n            let currentFilterValues = Object.entries(filters)\n                .reduce((pre: any, [key, value]) => {\n                    return [...pre, {\n                        key,\n                        value: value.default\n                    }]\n                }, []).filter((item: any) => item.value)\n\n            const localCacheFilter = JSON.parse(localStorage.getItem(`filter_${location.pathname}${location.search}`) || '[]')\n            let urlFilter = undefined\n            if (getParam('filter')) {\n                try {\n                    urlFilter = JSON.parse(getParam('filter') || '[]')\n                } catch (error) {\n                    message.error('filter解析异常')\n                }\n            }\n            const localFilter = urlFilter || localCacheFilter\n            if (localFilter && localFilter.length) {\n                currentFilterValues = localFilter\n            }\n\n            setIsDownLoadData(download_data)\n            setIsImportData(import_data)\n            setLabelTitle(label_title)\n            setPrimaryKey(primary_key)\n            setColumnRelateFormat(columnRelatedFormat)\n            setMultipleAction(multipleAction)\n            setBaseUrl(route_base)\n            setUpdateColumnsMap(updateColumnsMap)\n            setFilterParamsMap(filters)\n            setCurrentColumns(tarColumns)\n            setFilterParams(tarFilter)\n            setDynamicFormConfigAdd(formConfigAdd)\n            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n\n            setLabelMap(label_columns)\n            setPermissions(permissions)\n            const currentTableWidth = cacheColumns ? tarColumns.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 80 : tarColumns.length * 100 + 80 + actionwidth\n            setTableWidth(currentTableWidth)\n            setHelpUrl(help_url)\n            setFilterValues(currentFilterValues)\n            fetchData({\n                pageConf: pageInfoInit,\n                params: currentFilterValues,\n                paramsMap: filters,\n                sorter: undefined\n            });\n        }).catch(err => {\n            console.log(err);\n        }).finally(() => {\n            setLoading(false)\n        })\n    }, []);\n\n    const fetchData = ({\n        pageConf,\n        params,\n        paramsMap,\n        sorter\n    }: fatchDataParams = {\n            pageConf: pageInfoInit,\n            params: filterValues,\n            paramsMap: filterParamsMap,\n            sorter: undefined\n        }) => {\n        setLoading(true);\n        let form_data = undefined\n        const temlateId = getParam('id')\n\n        form_data = JSON.stringify({\n            str_related: 1,\n            \"filters\": [\n                temlateId ? {\n                    \"col\": props?.model_name,\n                    \"opr\": \"rel_o_m\",\n                    \"value\": +temlateId\n                } : undefined,\n                ...params.filter(param => param.value !== undefined).map((param: any) => {\n                    let opr = ''\n                    const oprList = ['rel_o_m', 'ct', 'eq']\n                    const sourceOprList: string[] = paramsMap[param.key].filter.map((item: any) => item.operator) || []\n\n                    for (let i = 0; i < oprList.length; i++) {\n                        const currentOpr = oprList[i];\n                        if (sourceOprList.includes(currentOpr)) {\n                            opr = currentOpr\n                            break\n                        }\n                    }\n                    // if (!isNaN(+param.value) && paramsMap[param.key] && !(paramsMap[param.key].type === 'Related' || paramsMap[param.key].type === 'QuerySelect')) {\n                    //     opr = 'eq'\n                    // } else {\n                    //     const oprList = ['rel_o_m', 'ct', 'eq']\n                    //     const sourceOprList: string[] = paramsMap[param.key].filter.map((item: any) => item.operator) || []\n\n                    //     for (let i = 0; i < oprList.length; i++) {\n                    //         const currentOpr = oprList[i];\n                    //         if (sourceOprList.includes(currentOpr)) {\n                    //             opr = currentOpr\n                    //             break\n                    //         }\n                    //     }\n                    // }\n\n                    return {\n                        \"col\": param.key,\n                        \"opr\": opr,\n                        \"value\": param.value\n                    }\n                })\n            ].filter(item => !!item),\n            page: (pageConf.current || 1) - 1,\n            page_size: pageConf.pageSize || 10,\n            ...sorter\n        })\n\n        getADUGTemplateList(baseUrlRef.current, {\n            form_data,\n        })\n            .then((res) => {\n                const { count, data } = res.data.result\n                setDataList(data);\n                setSelectedRowKeys([])\n                setPageInfo({ ...pageInfoInit, ...pageConf, total: count });\n                setSorterParam(sorter)\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            .finally(() => setLoading(false));\n    };\n\n    const fetchDataDetail = (id: string) => {\n        setLoadingDetail(true)\n        setDataDetail([])\n        getADUGTemplateDetail(`${baseUrlRef.current}${id}`)\n            .then(res => {\n                const data = res.data.result\n                const detail: any[] = []\n                const formatValue = (data: any) => {\n                    if (Object.prototype.toString.call(data) === '[object Object]') {\n                        return data.last_name\n                    }\n                    return data\n                }\n                Object.keys(data).forEach(key => {\n                    detail.push({\n                        label: labelMapRef.current[key] || key,\n                        value: formatValue(data[key]),\n                        key\n                    })\n                })\n                setDataDetail(detail)\n            })\n            .catch(err => { })\n            .finally(() => { setLoadingDetail(false) })\n    }\n\n    const handleMultiRecord = (action: IADUGTemplateActionItem) => {\n        if (selectedRowKeys.length) {\n            // console.log(selectedRowKeys.map((item: any) => JSON.parse(item || '{}')[primaryKey]));\n            Modal.confirm({\n                title: action.confirmation,\n                icon: <ExclamationCircleOutlined />,\n                content: '',\n                okText: `确认${action.confirmation}`,\n                cancelText: '取消',\n                onOk() {\n                    return new Promise((resolve, reject) => {\n                        actionADUGTemplateMuliple(`${baseUrlRef.current}multi_action/${action.name}`, {\n                            ids: selectedRowKeys.map((item: any) => JSON.parse(item || '{}')[primaryKey])\n                        })\n                            .then((res) => {\n                                resolve('');\n                            })\n                            .catch((err) => {\n                                reject();\n                            });\n                    })\n                        .then((res) => {\n                            message.success('操作成功');\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(() => {\n                            message.error('操作失败');\n                        });\n                },\n                onCancel() { },\n            });\n        } else {\n            message.warn('请先选择')\n        }\n    }\n\n    const uploadConfig: UploadProps = {\n        name: 'csv_file',\n        maxCount: 1,\n        action: `${baseUrl}upload/`,\n        headers: {\n            authorization: 'authorization-text',\n        },\n        beforeUpload: file => {\n            const isCSV = file.name.indexOf('.csv') !== -1;\n            if (!isCSV) {\n                message.error(`${file.name} 并不是csv文件`);\n            }\n            return isCSV || Upload.LIST_IGNORE;\n        },\n        onChange(info) {\n            // if (info.file.status !== 'uploading') {\n            //     console.log(info.file, info.fileList);\n            // }\n            if (info.file.status === 'done') {\n                // message.success(`${info.file.name}，${info.file.response.message}`);\n                notification['success']({\n                    message: '导入成功',\n                    description: JSON.stringify(info.file.response),\n                });\n            } else if (info.file.status === 'error') {\n                // message.error(`${info.file.name} 数据导入失败`);\n                notification['error']({\n                    message: '导入失败',\n                    description: JSON.stringify(info.file.response),\n                });\n            }\n        },\n    };\n\n    return (\n        <div className=\"fade-in\">\n            {/* 添加 */}\n            <ModalForm\n                title={`添加${labelTitle}`}\n                width={800}\n                // formData={dynamicFormDataAdd}\n                loading={loadingAdd}\n                visible={visableAdd}\n                onCancel={() => { setVisableAdd(false) }}\n                onCreate={(values, form) => {\n                    setLoadingAdd(true)\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateAdd(baseUrlRef.current, values).then((res: any) => {\n                        message.success(`添加${labelTitle}成功`)\n                        form.resetFields()\n                        setVisableAdd(false)\n                        fetchData({\n                            ...fetchDataParams,\n                            pageConf: pageInfo,\n                            params: filterValues,\n                            sorter: sorterParam,\n                            paramsMap: filterParamsMap\n                        });\n                    }).catch(err => {\n                        message.error(`添加${labelTitle}失败`)\n                    }).finally(() => {\n                        setLoadingAdd(false)\n                    })\n                }}\n            >\n                {\n                    (form: FormInstance, formChangeRes: any) => <DynamicForm form={form} onRetryInfoChange={(value) => {\n                        setLoadingAdd(true)\n\n                        const formRes = form.getFieldsValue()\n                        for (const key in formRes) {\n                            if (Object.prototype.hasOwnProperty.call(formRes, key)) {\n                                const value = formRes[key];\n                                if (value === undefined) {\n                                    delete formRes[key]\n                                }\n                            }\n                        }\n                        const tar = JSON.stringify(formRes)\n                        form.resetFields()\n\n                        actionADUGTemplateRetryInfo(`${baseUrlRef.current}_info`, { exist_add_args: tar }).then(res => {\n                            const { add_columns, label_columns, description_columns, add_fieldsets } = res.data;\n                            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n                            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n                            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                                return {\n                                    group: group.group,\n                                    expanded: group.expanded,\n                                    config: createDyFormConfig(currentData, label_columns, description_columns)\n                                }\n                            })\n                            const formReset = add_columns.filter((item) => item.default !== '').map(column => ({ [column.name]: column.default })).reduce((pre, next) => ({ ...pre, ...next }), {})\n\n                            form.setFieldsValue(formReset)\n                            setDynamicFormConfigAdd(formConfigAdd)\n                            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n                        }).catch(err => {\n                            message.error('字段切换错误')\n                        }).finally(() => {\n                            setLoadingAdd(false)\n                        })\n\n                    }} formChangeRes={formChangeRes} linkageConfig={columnRelateFormat} config={dynamicFormConfigAdd} configGroup={dynamicFormGroupConfigAdd} />\n                }\n            </ModalForm>\n            {/* 修改 */}\n            <ModalForm\n                title={`修改${labelTitle}`}\n                width={800}\n                formData={dataDetail.reduce((pre, next) => {\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select') {\n                        let value = next.value\n                        const options = (updateColumnsMap[next.key] || {}).values || []\n                        const tarIndex = options.map((item: any) => item.value).indexOf(next.value)\n                        if (~tarIndex) {\n                            value = options[tarIndex].id\n                        }\n                        return { ...pre, [next.key]: value }\n                    }\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select2') {\n                        return { ...pre, [next.key]: (next.value || '').split(',') }\n                    }\n                    return { ...pre, [next.key]: next.value }\n                }, {})}\n                loading={loadingUpdate || loadingDetail}\n                visible={visableUpdate}\n                onCancel={() => { setVisableUpdate(false) }}\n                onCreate={(values) => {\n                    setLoadingUpdate(true)\n                    setDataDetail([])\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateUpdate(`${baseUrlRef.current}${values[primaryKey]}`, values)\n                        .then(res => {\n                            message.success(`更新${labelTitle}成功`)\n                            setVisableUpdate(false)\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(err => {\n                            message.error(`更新${labelTitle}失败`)\n                        })\n                        .finally(() => { setLoadingUpdate(false) })\n                }}\n            >\n                {\n                    (form: FormInstance) => <DynamicForm form={form} primaryKey={primaryKey} config={dynamicFormConfigUpdate} linkageConfig={columnRelateFormat} configGroup={dynamicFormGroupConfigUpdate} />\n                }\n            </ModalForm>\n            {/* 详情 */}\n            <Modal\n                title={`${labelTitle}详情`}\n                visible={visableDetail}\n                footer={null}\n                width={800}\n                destroyOnClose\n                onCancel={() => { setVisableDetail(false) }}>\n                <Spin spinning={loadingDetail}>\n                    <div className=\"pb32\" style={{ minHeight: 300 }}>\n                        {\n                            dataDetail.map((item, index) => {\n                                return <Row className=\"mb16\" key={`dataDetail_${index}`}>\n                                    <Col span={6}><div className=\"ta-r\"><strong>{item.label}：</strong></div></Col>\n                                    <Col span={18}><pre dangerouslySetInnerHTML={{ __html: item.value }}></pre></Col>\n                                </Row>\n                            })\n                        }\n                    </div>\n                </Spin>\n            </Modal>\n            <TitleHeader title={<>\n                {\n                    (props?.isSubRoute || getParam('targetId')) ? <Button className=\"mr16\" onClick={() => {\n                        navigate('/data/metadata/metadata_dimension')\n                        window.location.reload()\n                    }}><RollbackOutlined />返回</Button> : null\n                }\n                <span>{labelTitle}</span>\n            </>} breadcrumbs={(props?.breadcrumbs || []).map((crumbs, idx) => {\n                return <span key={`templateTitle_${props?.name}_${idx}`} className=\"c-hint-b fs12\">/<span className=\"plr2\">{crumbs}</span></span>\n            })} >\n                {\n                    helpUrl ? <div className=\"link\"><span className=\"pr4\" onClick={() => {\n                        window.open(helpUrl, 'blank')\n                    }}>帮助链接</span><QuestionCircleOutlined /></div> : null\n                }\n            </TitleHeader>\n            <Content className=\"appmgmt-content bg-title\">\n                {/* <div>\n                    <img className=\"m32\" style={{ height: 42 }} src={require('../images/star2.svg').default} alt=\"\" />\n                </div> */}\n                {\n                    !!filterParams.length && <MixSearch values={filterValues} params={filterParams} onChange={(values) => {\n                        localStorage.setItem(`filter_${location.pathname}${location.search}`, JSON.stringify(values))\n                        setFilterValues(values)\n                        fetchData({\n                            ...fetchDataParams,\n                            pageConf: pageInfoInit,\n                            params: values,\n                            sorter: sorterParam,\n                            paramsMap: filterParamsMap\n                        });\n                    }} />\n                }\n                {/* {\n                    tips.length ? <div className=\"bg-module mlr24 p16\">\n                        {tips.map((item, index) => {\n                            return <div key={`ADUGTemplate_tips_${index}`}><span>{labelMapRef.current[item.label] || item.label}：</span><span>{item.value}</span></div>\n                        })}\n                    </div> : null\n                } */}\n                <div className=\"m16\">\n                    <TableBox\n                        cancelExportData={true}\n                        tableKey={`tablebox_${location.pathname}`}\n                        titleNode={<Col className=\"tablebox-title\">{labelTitle}列表</Col>}\n                        buttonNode={<div className=\"d-f ac\">\n                            {\n                                permissions.includes('can_add') ? <Button className=\"mr16\" type=\"primary\" onClick={() => setVisableAdd(true)}>添加{labelTitle}<PlusOutlined /></Button> : null\n                            }\n                            <div>\n                                <Dropdown overlay={<Menu>\n                                    {\n                                        multipleAction.map((action, index) => {\n                                            return <Menu.Item key={`table_muliple_${index}`}>\n                                                <span className=\"link\" onClick={() => handleMultiRecord(action)}>\n                                                    {`批量${action.text}`}\n                                                </span>\n                                            </Menu.Item>\n                                        })\n                                    }\n\n                                </Menu>}>\n                                    <Button>批量操作 <DownOutlined /></Button>\n                                </Dropdown>\n                            </div>\n                            {\n                                isImportData ? <div className=\"d-f ml16\">\n                                    <Tooltip color=\"#fff\" title={<span className=\"tips-content-b\">注意：csv逗号分隔，第一行为列的英文名 <span className=\"link\" onClick={() => {\n                                        window.open(`${window.location.origin}${baseUrlRef.current}download_template`)\n                                    }}>下载导入模板</span></span>} placement=\"topLeft\">\n                                        <Upload {...uploadConfig}>\n                                            <Button className=\"\" icon={<UploadOutlined />}>批量导入数据</Button>\n                                        </Upload>\n                                    </Tooltip>\n                                </div> : null\n                            }\n                            {\n                                isDownLoadData ? <Button className=\"ml16\" onClick={() => {\n                                    Modal.confirm({\n                                        title: '导出数据',\n                                        icon: <ExclamationCircleOutlined />,\n                                        content: '',\n                                        okText: '确认导出数据',\n                                        cancelText: '取消',\n                                        onOk() {\n                                            window.open(`${window.location.origin}${baseUrlRef.current}download`)\n                                            message.success('导出成功');\n                                        },\n                                        onCancel() { },\n                                    });\n                                }}>批量导出  <ExportOutlined /></Button> : null\n                            }\n\n                        </div>}\n                        rowKey={(record: any) => {\n                            return JSON.stringify(record)\n                        }}\n                        columns={currentColumns}\n                        loading={loading}\n                        pagination={pageInfo}\n                        dataSource={dataList}\n                        onChange={(pageInfo: any, filters, sorter: any) => {\n                            const tarSorter = sorter.order ? {\n                                order_column: sorter.columnKey,\n                                order_direction: sorter.order === \"ascend\" ? 'asc' : 'desc'\n                            } as ISorterParam : undefined\n\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                paramsMap: filterParamsMap,\n                                sorter: tarSorter\n                            });\n                            // setPageInfo(pageInfo)\n                        }}\n                        rowSelection={{\n                            type: 'checkbox',\n                            fixed: 'left',\n                            columnWidth: 80,\n                            selectedRowKeys,\n                            onChange: (selectedRowKeys) => {\n                                setSelectedRowKeys(selectedRowKeys)\n                            }\n                        }}\n                        scroll={{ x: tableWidth, y: scrollY }}\n                    />\n                </div>\n            </Content>\n        </div >\n    );\n}\n\n"],"names":["Title","Typography","props","styles","position","top","className","justify","align","style","noBorderBottom","borderBottom","level","marginBottom","title","breadcrumbs","children","CopyToClipboard","require","customizeRenderEmpty","height","flexDirection","src","emptyImg","width","alt","ResizableTitle","onResize","restProps","Resizable","handle","onClick","e","stopPropagation","draggableOpts","enableUserSelectHack","userSelect","useState","exportDataVisible","setExportDataVisible","header","data","dataFormat","setDataFormat","filterValue","setFilterValue","columns","cols","setCols","handleResize","index","_","size","temp","tableWidth","reduce","pre","next","localStorage","setItem","tableKey","JSON","stringify","setCurrentTableScroll","currentTableScroll","x","customColumns","map","col","onHeaderCell","column","scroll","useEffect","dataSource","filter","item","indexOf","dataIndex","handdleFilterHeader","dataColumns","sheetHeader","tarData","forEach","dataRow","row","colName","res","push","handleExportJira","str","length","join","rowKey","Object","values","handleExportText","direction","maskClosable","centered","bodyStyle","maxHeight","overflow","visible","onCancel","footer","options","label","value","defaultValue","onChange","right","bottom","type","tab","text","onCopy","message","cursor","minHeight","option","datas","sheetData","sheetName","ExportJsonExcel","saveExcel","titleNode","buttonNode","cancelExportData","marginLeft","renderEmpty","components","cell","pagination","loading","rowSelection","Form","form","updateState","React","formData","setFieldsValue","currentChange","allValues","formChangeRes","setFormChangeRes","destroyOnClose","okText","cancelText","resetFields","onOk","console","log","getFieldsValue","validateFields","then","onCreate","catch","info","spinning","onValuesChange","labelCol","span","wrapperCol","layout","name","prototype","toString","call","Option","Select","collapsed","setCollapsed","formatParamsData","indexKey","params","paramsData","setParamsData","currentParamsData","setCurrentParamsData","Map","paramsDataMap","setParamsDataMap","group","key","undefined","i","j","used","formatData","dataMap","param","set","handleFinishForm","preVal","tarVal","handleRenderValueEl","getFieldValue","onPressEnter","handlePressEnter","currentItem","get","defalutValue","placeholder","placeHolder","currentOptions","dropdownMatchSelectWidth","showSearch","mode","optionFilterProp","onFinish","initialValues","gutter","marginRight","fields","add","remove","field","compact","noStyle","rules","required","usedKey","includes","selectActionRemove","display","shouldUpdate","DeleteOutlined","PlusOutlined","flex","htmlType","DownOutlined","UpOutlined","InputSearch","inputRef","id","Math","random","substring","dataCache","setDataCache","setValue","dataFilter","isOpenSearchMatch","handleChange","highlightKeyWord","keyWord","preStr","nextStr","debounceScroll","fun","timer","time","args","clearTimeout","setTimeout","apply","debounce","onScrollButtom","labelName","htmlFor","disabled","maxLength","target","onKeyPress","nativeEvent","keyCode","blur","onSearch","currentTarget","ref","element","SearchOutlined","onScroll","scrollTop","clientHeight","scrollHeight","onMouseDown","handleClick","calculateId","strList","split","charCodeAt","DynamicForm","current","setCurrent","config","currentConfig","_setCurrentConfig","currentConfigRef","useRef","setCurrentConfig","configGroup","currentConfigGroup","_setCurrentConfigGroup","currentConfigGroupRef","setCurrentConfigGroup","resetFieldProps","linkageConfig","optionInlinkAge","configItem","dep","valueId","effect","effectOption","findOptionInLinkAge","tarConfig","setValueInConfig","tarConfigGroup","configList","setValueInConfigGroup","keys","formValues","entries","renderInput","itemProps","initialValue","extra","description","dangerouslySetInnerHTML","__html","disable","renderInputSelect","renderTextArea","autoSize","minRows","renderSelect","multiple","retry_info","onRetryInfoChange","renderRadio","renderDatePicker","showTime","disabledDate","moment","endOf","renderRangePicker","dispatchRenderFormItem","renderFormItem","list","restField","listItem","offset","danger","block","icon","MinusCircleOutlined","primaryKey","hidden","Step","currentConfigGroupNameList","err","TaskListManager","navigate","useNavigate","location","useLocation","dataList","setDataList","setLoading","loadingAdd","setLoadingAdd","visableAdd","setVisableAdd","loadingUpdate","setLoadingUpdate","visableUpdate","setVisableUpdate","loadingDetail","setLoadingDetail","visableDetail","setVisableDetail","selectedRowKeys","setSelectedRowKeys","startTime","subtract","startOf","format","endTime","pageInfoInit","pageSize","total","showSizeChanger","showQuickJumper","pageSizeOptions","showTotal","pageInfo","setPageInfo","currentColumns","setCurrentColumns","filterParams","setFilterParams","filterValues","_setFilterValues","filterValuesRef","setFilterValues","dynamicFormConfigAdd","setDynamicFormConfigAdd","dynamicFormConfigUpdate","setDynamicFormConfigUpdate","dynamicFormGroupConfigAdd","setDynamicFormGroupConfigAdd","dynamicFormGroupConfigUpdate","setDynamicFormGroupConfigUpdate","updateColumnsMap","setUpdateColumnsMap","labelMap","_setLabelMap","labelMapRef","dataDetail","setDataDetail","setTableWidth","permissions","setPermissions","filterParamsMap","setFilterParamsMap","helpUrl","setHelpUrl","baseUrl","_setBaseUrl","baseUrlRef","isImportData","setIsImportData","isDownLoadData","setIsDownLoadData","columnRelateFormat","setColumnRelateFormat","multipleAction","setMultipleAction","sorterParam","setSorterParam","setPrimaryKey","labelTitle","setLabelTitle","scrollY","setScrollY","fetchDataParams","pageConf","paramsMap","sorter","getTableScroll","createDyFormConfig","label_columns","description_columns","validators","pattern","RegExp","regex","min","max","default","targetId","getParam","url","getADUGTemplateApiInfo","list_columns","filters","add_columns","edit_columns","add_fieldsets","edit_fieldsets","help_url","order_columns","action","route_base","column_related","primary_key","label_title","cols_width","import_data","download_data","hasAction","related","cacheColumns","getItem","pathname","cacheColumnsWidthMap","parse","columnRelatedFormat","src_columns","des_columns","ePre","eNext","src_value","des_value","listColumns","a","b","render","record","placement","tarRes","actionList","singleAction","single","tableAction","fixed","overlay","fetchDataDetail","formConfigUpdate","formGroupConfigUpdate","currentData","expanded","Modal","ExclamationCircleOutlined","content","okButtonProps","Promise","resolve","reject","actionADUGTemplateDelete","fetchData","confirmation","actionADUGTemplateSingle","tarColumns","addColumnsMap","formConfigAdd","formGroupConfigAdd","tarFilter","oprList","operator","currentFilterValues","localCacheFilter","search","urlFilter","error","localFilter","setLabelMap","currentTableWidth","finally","form_data","temlateId","str_related","model_name","opr","sourceOprList","currentOpr","page","page_size","getADUGTemplateList","result","count","getADUGTemplateDetail","detail","formatValue","last_name","uploadConfig","maxCount","headers","authorization","beforeUpload","file","isCSV","Upload","status","notification","response","hasOwnProperty","Array","isArray","actionADUGTemplateAdd","formRes","tar","actionADUGTemplateRetryInfo","exist_add_args","formReset","tarIndex","actionADUGTemplateUpdate","isSubRoute","window","reload","RollbackOutlined","crumbs","idx","open","QuestionCircleOutlined","actionADUGTemplateMuliple","ids","handleMultiRecord","color","origin","UploadOutlined","ExportOutlined","tarSorter","order","order_column","columnKey","order_direction","columnWidth","y"],"sourceRoot":""}